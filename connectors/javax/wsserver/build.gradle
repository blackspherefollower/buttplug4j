plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'checkstyle'
    id 'signing'
}

repositories {
    mavenCentral()
}

dependencies {
    api project(':connectors:javax:wscommon')
    testImplementation 'org.eclipse.jetty.websocket:websocket-javax-server:10.0.15'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}
checkstyle {
    configFile = file("${rootDir}/checkstyle.xml")
    showViolations = false
    ignoreFailures = true
}
test {
    finalizedBy jacocoTestReport
    finalizedBy check
}
jacocoTestReport {
    dependsOn test
}
tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${System.env.GITHUB_REPOSITORY}")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
        maven {
            name = "ossrh"
            url = version.contains("-SNAPSHOT") ?
                    uri("https://s01.oss.sonatype.org/content/repositories/snapshots/") :
                    uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")

            credentials {
                username = project.findProperty("maven.user") ?:System.getenv("MAVEN_USER")
                password = project.findProperty("maven.pass") ?:System.getenv("MAVEN_PASS")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                name = 'Buttplug for Java'
                description = 'A pure Java Buttplug Client implementation'
                url = 'https://github.com/blackspherefollower/buttplug4j'
                inceptionYear = '2017'

                licenses {
                    license {
                        name = 'BSDv3 License'
                        url = 'https://github.com/blackspherefollower/buttplug4j/'
                    }
                }
                developers {
                    developer {
                        id = 'blackspherefollower'
                        name = 'BlackSphereFollower'
                        email = 'blackspherefollower@iostindex.com'
                    }
                }
                scm {
                    connection='scm:git:git:github.com/blackspherefollower/buttplug4j.git'
                    developerConnection='scm:git:https://github.com/blackspherefollower/buttplug4j.git'
                    url='https://github.com/blackspherefollower/buttplug4j'
                }
            }
        }
    }
}

signing {
    def gpgKey = project.findProperty("gpg.key") ?: System.getenv("OSSRH_GPG") ?: ""
    def gpgPass = project.findProperty("gpg.pass") ?: System.getenv("OSSRH_GPG_PASS") ?: ""
    useInMemoryPgpKeys(gpgKey.replaceAll("\\\\n", "\n"), gpgPass)
    sign publishing.publications.mavenJava
}
